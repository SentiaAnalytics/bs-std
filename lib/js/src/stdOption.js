// Generated by BUCKLESCRIPT VERSION 1.9.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function some(a) {
  return /* Some */[a];
}

function map(f, opt) {
  if (opt) {
    return /* Some */[Curry._1(f, opt[0])];
  } else {
    return /* None */0;
  }
}

function map2(f, opt1, opt2) {
  if (opt1 && opt2) {
    return /* Some */[Curry._2(f, opt1[0], opt2[0])];
  } else {
    return /* None */0;
  }
}

function map3(f, opt1, opt2, opt3) {
  if (opt1 && opt2 && opt3) {
    return /* Some */[Curry._3(f, opt1[0], opt2[0], opt3[0])];
  } else {
    return /* None */0;
  }
}

function flatMap(f, opt) {
  if (opt) {
    return Curry._1(f, opt[0]);
  } else {
    return /* None */0;
  }
}

function withDefault(defaultValue, opt) {
  if (opt) {
    return opt[0];
  } else {
    return defaultValue;
  }
}

function fromResult(res) {
  if (res.tag) {
    return /* Some */[res[0]];
  } else {
    return /* None */0;
  }
}

function fromRemote(res) {
  if (typeof res === "number" || res.tag !== 1) {
    return /* None */0;
  } else {
    return /* Some */[res[0]];
  }
}

function isNone(opt) {
  if (opt) {
    return /* false */0;
  } else {
    return /* true */1;
  }
}

function isSome(opt) {
  if (opt) {
    return /* true */1;
  } else {
    return /* false */0;
  }
}

var none = /* None */0;

exports.some        = some;
exports.none        = none;
exports.map         = map;
exports.map2        = map2;
exports.map3        = map3;
exports.flatMap     = flatMap;
exports.withDefault = withDefault;
exports.fromResult  = fromResult;
exports.fromRemote  = fromRemote;
exports.isNone      = isNone;
exports.isSome      = isSome;
/* No side effect */
