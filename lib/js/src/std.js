// Generated by BUCKLESCRIPT VERSION 1.9.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function identity(a) {
  return a;
}

function always(a, _) {
  return a;
}

function $$void() {
  return /* () */0;
}

function $great$great(f, g, x) {
  return Curry._1(g, Curry._1(f, x));
}

function flip(f, a, b) {
  return Curry._2(f, b, a);
}

function curry(f, a, b) {
  return Curry._1(f, /* tuple */[
              a,
              b
            ]);
}

function uncurry(f, param) {
  return Curry._2(f, param[0], param[1]);
}

function tap(f, a) {
  Curry._1(f, a);
  return a;
}

var Option = 0;

var Remote = 0;

var Result = 0;

var Task = 0;

var List = 0;

exports.Option       = Option;
exports.Remote       = Remote;
exports.Result       = Result;
exports.Task         = Task;
exports.List         = List;
exports.identity     = identity;
exports.always       = always;
exports.$$void       = $$void;
exports.$great$great = $great$great;
exports.flip         = flip;
exports.curry        = curry;
exports.uncurry      = uncurry;
exports.tap          = tap;
/* No side effect */
