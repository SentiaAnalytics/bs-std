// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Dict      = require("./Dict.js");
var Task      = require("./Task.js");
var Async     = require("./Async.js");
var Option    = require("./Option.js");
var Remote    = require("./Remote.js");
var Result    = require("./Result.js");
var Prelude   = require("./Prelude.js");
var StdList   = require("./StdList.js");
var StdString = require("./StdString.js");

var Option$1 = /* module */[
  /* some */Option.some,
  /* none */Option.none,
  /* map */Option.map,
  /* map2 */Option.map2,
  /* map3 */Option.map3,
  /* flatten */Option.flatten,
  /* flatMap */Option.flatMap,
  /* withDefault */Option.withDefault,
  /* fromResult */Option.fromResult,
  /* fromRemote */Option.fromRemote,
  /* isNone */Option.isNone,
  /* isSome */Option.isSome,
  /* encode */Option.encode,
  /* decode */Option.decode
];

var Result$1 = /* module */[
  /* map */Result.map,
  /* map2 */Result.map2,
  /* map3 */Result.map3,
  /* flatten */Result.flatten,
  /* flatMap */Result.flatMap,
  /* withDefault */Result.withDefault,
  /* fromOption */Result.fromOption,
  /* isError */Result.isError,
  /* isOk */Result.isOk,
  /* encode */Result.encode
];

var Async$1 = /* module */[
  /* none */Async.none,
  /* make */Async.make,
  /* map */Async.map,
  /* flatten */Async.flatten,
  /* flatMap */Async.flatMap,
  /* fromPromise */Async.fromPromise
];

var Dict$1 = /* module */[
  /* empty */Dict.empty,
  /* fromList */Dict.fromList,
  /* get */Dict.get,
  /* find */Dict.find,
  /* contains */Dict.contains,
  /* set */Dict.set,
  /* setDefault */Dict.setDefault,
  /* keys */Dict.keys,
  /* values */Dict.values,
  /* iter */Dict.iter,
  /* map */Dict.map,
  /* mapValues */Dict.mapValues,
  /* mapKeys */Dict.mapKeys,
  /* filter */Dict.filter,
  /* foldLeft */Dict.foldLeft,
  /* foldRight */Dict.foldRight,
  /* encode */Dict.encode,
  /* decode */Dict.decode
];

var identity = Prelude.identity;

var always = Prelude.always;

var $$void = Prelude.$$void;

var $great$great = Prelude.$great$great;

var flip = Prelude.flip;

var curry = Prelude.curry;

var uncurry = Prelude.uncurry;

var tap = Prelude.tap;

var Remote$1 = [
  Remote.ready,
  Remote.error,
  Remote.pending,
  Remote.notAsked,
  Remote.map,
  Remote.map2,
  Remote.map3,
  Remote.flatten,
  Remote.flatMap,
  Remote.withDefault,
  Remote.fromResult,
  Remote.fromOption,
  Remote.isNotAsked,
  Remote.isPending,
  Remote.isFailed,
  Remote.isReady,
  Remote.encode
];

var List = [
  StdList.length,
  StdList.isEmpty,
  StdList.reverse,
  StdList.merge,
  StdList.repeat,
  StdList.range,
  StdList.cons,
  StdList.append,
  StdList.flatten,
  StdList.zip,
  StdList.head,
  StdList.tail,
  StdList.nth,
  StdList.take,
  StdList.takeLast,
  StdList.takeWhile,
  StdList.takeUntil,
  StdList.drop,
  StdList.dropLast,
  StdList.dropWhile,
  StdList.dropUntil,
  StdList.filter,
  StdList.map,
  StdList.mapIndexed,
  StdList.map2,
  StdList.flatMap,
  StdList.flatMap2,
  StdList.filterMap,
  StdList.iter,
  StdList.iter2,
  StdList.iterIndexed,
  StdList.foldLeft,
  StdList.foldRight,
  StdList.foldLeft2,
  StdList.foldRight2,
  StdList.find,
  StdList.all,
  StdList.any,
  StdList.contains,
  StdList.partition,
  StdList.split,
  StdList.sort,
  StdList.encode,
  StdList.decode
];

var $$String = [
  StdString.length,
  StdString.isEmpty,
  StdString.fromChar,
  StdString.fromInt,
  StdString.fromFloat,
  StdString.fromChars,
  StdString.escaped,
  StdString.reverse,
  StdString.uppercase,
  StdString.lowercase,
  StdString.capitalize,
  StdString.uncapitalize,
  StdString.get,
  StdString.substring,
  StdString.trim,
  StdString.take,
  StdString.drop,
  StdString.takeLast,
  StdString.dropLast,
  StdString.takeUntil,
  StdString.takeWhile,
  StdString.dropUntil,
  StdString.dropWhile,
  StdString.split,
  StdString.words,
  StdString.lines,
  StdString.cons,
  StdString.uncons,
  StdString.append,
  StdString.join,
  StdString.pad,
  StdString.leftPad,
  StdString.rightPad,
  StdString.iter,
  StdString.iterIndexed,
  StdString.map,
  StdString.mapIndexed,
  StdString.indexOf,
  StdString.lastIndexOf,
  StdString.indexFrom,
  StdString.lastIndexFrom,
  StdString.contains,
  StdString.encode,
  StdString.decode
];

var Task$1 = [
  Task.make,
  Task.succeed,
  Task.fail,
  Task.map,
  Task.map2,
  Task.map3,
  Task.biMap,
  Task.flatMap,
  Task.fold,
  Task.fromResult,
  Task.fromOption,
  Task.fork,
  Task.fromLazyPromise
];

var decodeJSON = Prelude.decodeJSON;

var parseJSON = Prelude.parseJSON;

exports.identity     = identity;
exports.always       = always;
exports.$$void       = $$void;
exports.$great$great = $great$great;
exports.flip         = flip;
exports.curry        = curry;
exports.uncurry      = uncurry;
exports.tap          = tap;
exports.Remote       = Remote$1;
exports.Async        = Async$1;
exports.Result       = Result$1;
exports.List         = List;
exports.Dict         = Dict$1;
exports.$$String     = $$String;
exports.Task         = Task$1;
exports.Option       = Option$1;
exports.decodeJSON   = decodeJSON;
exports.parseJSON    = parseJSON;
/* Dict Not a pure module */
